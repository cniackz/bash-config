apiVersion: v1
kind: ServiceAccount
metadata:
  name: mc-job-sa
  namespace: minio-tenant-1
---
apiVersion: v1
data:
  bucket-policy.json: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": [
            "arn:aws:s3:::test-bucket",
            "arn:aws:s3:::test-bucket/*"
          ]
        }
      ]
    }
  setup.sh: |
    #!/bin/bash
    mc mb myminio/test-bucket -p && \
    mc mb myminio/other-bucket -p && \
    mc admin policy create myminio test-bucket-rw /start-config/bucket-policy.json
kind: ConfigMap
metadata:
  name: start-config-script
  namespace: minio-tenant-1
---
apiVersion: batch/v1
kind: Job
metadata:
  name: setup-bucket
  namespace: minio-tenant-1
spec:
  backoffLimit: 5
  template:
    spec:
      containers:
      - command:
        - /start-config/setup.sh
        env:
        - name: MC_HOST_myminio
          value: https://$(ACCESS_KEY):$(SECRET_KEY)@minio.minio-tenant-1.svc.cluster.local
        - name: MC_STS_ENDPOINT_myminio
          value: https://sts.minio-operator.svc.cluster.local:4223/sts/minio-tenant-1
        - name: MC_WEB_IDENTITY_TOKEN_FILE_myminio
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        image: minio/mc
        name: mc
        volumeMounts:
        - mountPath: /start-config/
          name: start-config
      restartPolicy: OnFailure
      serviceAccountName: mc-job-sa
      volumes:
      - configMap:
          defaultMode: 484
          name: start-config-script
        name: start-config
---
apiVersion: sts.min.io/v1alpha1
kind: PolicyBinding
metadata:
  name: mc-job-binding
  namespace: minio-tenant-1
spec:
  application:
    namespace: minio-tenant-1
    serviceaccount: mc-job-sa
  policies:
  - consoleAdmin
